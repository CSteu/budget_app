name: Build and deploy ASP.Net Core app and SQL Database to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1) Check out the code
      - uses: actions/checkout@v4

      # 2) Set up Node for Vue
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 3) Install & Build Vue
      - name: Install NPM dependencies (Vue)
        working-directory: budget-app
        run: npm install

      - name: Build Vue
        working-directory: budget-app
        run: npm run build

      # 4) Set up .NET
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      # 5) Restore NuGet packages
      - name: Restore .NET
        run: dotnet restore .\BudgetApi\BudgetApi\BudgetApi.csproj

      # 6) Run Tests
      - name: Run Unit Tests
        run: dotnet test .\BudgetApi\BudgetApi.Tests\BudgetApi.Tests.csproj --configuration Release
        env:
          DOTNET_CLI_HOME: ${{ runner.temp }}

      # 7) Build .NET
      - name: Build .NET project
        run: dotnet build .\BudgetApi\BudgetApi\BudgetApi.csproj --configuration Release

      # 8) Publish .NET
      - name: Publish .NET project
        run: dotnet publish .\BudgetApi\BudgetApi\BudgetApi.csproj --configuration Release --output .\publish

      # 9) Build SQL Database Project
      - name: Build SQL Database Project
        run: |
          dotnet build .\DatabaseProject\DatabaseProject.sqlproj --configuration Release
        working-directory: ./DatabaseProject

      # 10) Publish SQL Database Project to DACPAC
      - name: Publish SQL Database Project to DACPAC
        run: |
          dotnet publish .\DatabaseProject\DatabaseProject.sqlproj --configuration Release --output .\publish
        working-directory: ./DatabaseProject

      # 11) Upload artifacts
      - name: Upload .NET app artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app
          path: .\publish

      - name: Upload SQL DACPAC artifact
        uses: actions/upload-artifact@v4
        with:
          name: sql-dacpac
          path: ./DatabaseProject/publish/*.dacpac

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      # 1) Download the published .NET artifact
      - name: Download .NET artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app
          path: ./publish

      # 2) Download the published SQL DACPAC artifact
      - name: Download SQL DACPAC artifact
        uses: actions/download-artifact@v4
        with:
          name: sql-dacpac
          path: ./sql

      # 3) Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # 4) Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'dev-spendinginsights'
          slot-name: 'Production'
          package: ./publish

      # 5) Install sqlpackage
      - name: Install sqlpackage
        run: |
          Invoke-WebRequest -Uri "https://aka.ms/sqlpackage-win" -OutFile "$env:USERPROFILE\Downloads\sqlpackage.zip"
          Expand-Archive -Path "$env:USERPROFILE\Downloads\sqlpackage.zip" -DestinationPath "$env:USERPROFILE\Downloads\sqlpackage"
          $env:PATH += ";$env:USERPROFILE\Downloads\sqlpackage"
        shell: powershell

      # 6) Deploy SQL Database
      - name: Deploy SQL Database
        run: |
          sqlpackage /Action:Publish /SourceFile:"./sql/DatabaseProject.dacpac" /TargetServerName:"$env:AZURE_SQL_SERVER" /TargetDatabaseName:"$env:AZURE_SQL_DATABASE" /TargetUser:"$env:AZURE_SQL_USERNAME" /TargetPassword:"$env:AZURE_SQL_PASSWORD" /p:BlockOnPossibleDataLoss=false
        env:
          AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
          AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
          AZURE_SQL_USERNAME: ${{ secrets.AZURE_SQL_USERNAME }}
          AZURE_SQL_PASSWORD: ${{ secrets.AZURE_SQL_PASSWORD }}
